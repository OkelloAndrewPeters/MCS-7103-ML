# -*- coding: utf-8 -*-
"""MCS-7103_Assignment_1_Okello_Andrew_Peters.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14uj0C-RQMEDjyTNimREuM8M1kMc3GKmz

MCS - 7103                  OKELLO ANDREW PETERS
ASSIGNMENT ONE                2024/HD05/21944U
                                2400721944

**Life Expectancy is becoming a major concern today with a rise of food insecurity and other factors. I am using a dataset called Life Expectancy to help me understand the nexus between life expectancy and a number of control factors.**
"""

#importing pandas library
import pandas as pd

df = pd.read_csv('https://raw.githubusercontent.com/OkelloAndrewPeters/datascience/main/LifeExpectancyData.csv')
df

#having a look at all the columns
df.columns

df.shape

"""**Cleaning column names. Removing white spaces and renaming some**"""

df.columns = df.columns.str.strip()

df.rename (columns = {'Life expectancy':'Life Expectancy','percentage expenditure':'Percentage Expenditure',
                      'thinness 1-19 years':'Thinness(1-19 years)','thinness 5-9 years':'Thinness(5-9 years)'}, inplace = True)

df.columns

df.rename (columns = {'thinness  1-19 years': 'Thinness(1-19 years)'}, inplace = True)

df.columns

#encoding categorical data
df['Country'] = df['Country'].astype('category')
df['Country'] = df['Country'].cat.codes

df['Year'] = df['Year'].astype('category')
df['Year'] = df['Year'].cat.codes

df['Status'] = df['Status'].astype('category')
df['Status'] = df['Status'].cat.codes

"""**Selecting features through correlation analysis using a heatmap. I'm dropping columns with a correlation less than 0.5 with respect to my target variable which is Life Expectancy**"""

import seaborn as sns
import matplotlib.pyplot as plt
corrmat = df.corr(method = "spearman")
f, ax = plt.subplots(figsize=(12, 10))
sns.heatmap(corrmat, ax=ax, cmap = "coolwarm", linewidth = 0.1, annot = True)

#according to the correlation analysis above, I am dropping columns which are < 0.5
df = df.drop(columns = ['Country', 'Year', 'Alcohol', 'Percentage Expenditure',
                        'Hepatitis B', 'Measles', 'Total expenditure', 'Population'], axis=1)

df.head()

#checking for duplicates
df.duplicated().sum()

#checking for null values
print(df.isnull().sum())

#dropping null values in for columns with few null value
df.dropna(subset = ['Life Expectancy'], inplace=True)

df.dropna(subset = ['Adult Mortality', 'BMI','Polio', 'Diphtheria'], inplace=True)

print(df.isnull().sum())

#using descriptive statistics to summarize the data and also ascertain what to replace the null values with
df.describe().T

"""**For the columns below, since the null values were many, I filled them with the mean**"""

#I am filling null values with either the mean or median based the difference between the 2
df["GDP"] = df["GDP"].fillna(df["GDP"].median())
df["Thinness(1-19 years)"] = df["Thinness(1-19 years)"].fillna(df["Thinness(1-19 years)"].mean())
df["Thinness(5-9 years)"] = df["Thinness(5-9 years)"].fillna(df["Thinness(5-9 years)"].mean())
df["Income composition of resources"] = df["Income composition of resources"].fillna(df["Income composition of resources"].mean())
df["Schooling"] = df["Schooling"].fillna(df["Schooling"].mean())

#checking again for null values
print(df.isnull().sum())

"""**Checking for outliers in each column. I am going to handle 1 columns at a time. I am using a box plot. starting with thinness  1-19 years'**"""

df.shape

"""**box_plot function for viewing outliers**"""

#defining a function
def plot_boxplot(df, ft):
  df.boxplot(column = [ft])
  plt.grid(False)
  plt.show()

sns.boxplot(df['GDP'])

df['GDP'].shape

#find the limits
upper_limit = df['GDP'].mean() + 3*df['GDP'].std()
lower_limit = df['GDP'].mean() - 3*df['GDP'].std()

print('upper limit', upper_limit)
print('lower limit', lower_limit)

#finding the outliers
df.loc[(df['GDP'] > upper_limit) | (df['GDP'] < lower_limit)]

#trimming (deleting the otlier data)

new_df = df.loc[(df['GDP'] < upper_limit) & (df['GDP'] > lower_limit)]
new_df.shape

sns.boxplot(new_df['GDP'])

import seaborn as sns
new_df.boxplot(column = ['Status', 'Polio', 'Adult Mortality', 'BMI', 'Life Expectancy', 'infant deaths'])

df.boxplot(column = ['Income composition of resources', 'Schooling'])

df.boxplot(column = ['Thinness(1-19 years)', 'Thinness(5-9 years)',])

"""**It is only the GDP column that had out outliers, the rest of the values in the other columns are within the range of the min and max values of that particular feature**"""



"""**EXPLORATORY DATA ANALYSIS**"""

df = new_df.copy()

df.head()

df.shape

"""**UNIVARIATE ANALYSIS**"""

#Starting with status column
plt.hist(df['Status'], bins=30, color='skyblue', edgecolor='black')
plt.xlabel('Status Values')
plt.ylabel('Frequency')
plt.title('Histogram for the Status Feature')
plt.show()

# @title Status Column

from matplotlib import pyplot as plt
df['Status'].plot(kind='line', figsize=(8, 4), title='Status')
plt.gca().spines[['top', 'right']].set_visible(False)

# @title Adult Mortality Column
#Adult Mortality
sns.histplot(df['Adult Mortality'], bins=30, kde=True, color='lightgreen', edgecolor='red')
# Adding labels and title
plt.xlabel('Adult Mortality Values')
plt.ylabel('Density')
plt.title('Adult Mortality Distribution')

# Display the plot
plt.show()

sns.boxplot(df['Adult Mortality'])

#life Expectancy

from matplotlib import pyplot as plt
df['Life Expectancy'].plot(kind='hist', bins=20, title='Life Expectancy')
plt.gca().spines[['top', 'right',]].set_visible(False)

df.describe().T

# @title infant deaths

from matplotlib import pyplot as plt
df['infant deaths'].plot(kind='hist', bins=20, title='infant deaths')
plt.gca().spines[['top', 'right',]].set_visible(False)

# @title BMI Column
sns.histplot(df['BMI'], bins=30, kde=True, color='lightgreen', edgecolor='red')
# Adding labels and title
plt.xlabel('BMI Values')
plt.ylabel('Density')
plt.show()

# @title under-five deaths
sns.histplot(df['under-five deaths'], bins=30, kde=True, color='lightgreen', edgecolor='red')
# Adding labels and title
plt.xlabel('under-five deaths Values')
plt.ylabel('Density')
plt.show()

# @title Polio
sns.histplot(df['Polio'], bins=30, kde=True, color='blue', edgecolor='red')
# Adding labels and title
plt.xlabel('Polio Values')
plt.ylabel('Density')
plt.show()

# @title Diphtheria
sns.histplot(df['Diphtheria'], bins=30, kde=True, color='blue', edgecolor='red')
# Adding labels and title
plt.xlabel('Diphtheria Values')
plt.ylabel('Density')
plt.show()

# @title HIV/AIDS
sns.histplot(df['HIV/AIDS'], bins=30, kde=True, color='blue', edgecolor='red')
# Adding labels and title
plt.xlabel('HIV/AIDS Values')
plt.ylabel('Density')
plt.show()

# @title GDP
sns.histplot(df['GDP'], bins=30, kde=True, color='blue', edgecolor='red')
# Adding labels and title
plt.xlabel('GDP Values')
plt.ylabel('Density')
plt.show()

#Thinness(1-19 years)
# @title Thinness(1-19 years)
sns.histplot(df['Thinness(1-19 years)'], bins=30, kde=True, color='blue', edgecolor='red')
# Adding labels and title
plt.xlabel('Thinness(1-19 years) Values')
plt.ylabel('Density')
plt.show()

# @title Thinness(5-9 years)
sns.histplot(df['Thinness(5-9 years)'], bins=30, kde=True, color='lightgreen', edgecolor='red')
# Adding labels and title
plt.xlabel('Thinness(5-9 years) Values')
plt.ylabel('Density')
plt.show()

# @title Income composition of resources
sns.histplot(df['Income composition of resources'], bins=30, kde=True, color='blue', edgecolor='red')
# Adding labels and title
plt.xlabel('Income composition of resources Values')
plt.ylabel('Density')
plt.show()

# @title Schooling
sns.histplot(df['Schooling'], bins=30, kde=True, color='blue', edgecolor='red')
# Adding labels and title
plt.xlabel('Schooling Values')
plt.ylabel('Density')
plt.show()

"""**Bivaraite and Multivariate Analysis**"""

# @title Life Expectancy vs. Adult Mortality
import matplotlib.pyplot as plt

plt.figure(figsize=(10, 6))
plt.scatter(df['Adult Mortality'], df['Life Expectancy'])
plt.xlabel('Adult Mortality')
plt.ylabel('Life Expectancy')
_ = plt.title('Life Expectancy vs. Adult Mortality')

# @title Polio vs Diphtheria Vaccination Rates

import matplotlib.pyplot as plt
plt.figure(figsize=(10, 6))
plt.scatter(df['Polio'], df['Diphtheria'], c=df['GDP'])
plt.xlabel('Polio')
_ = plt.ylabel('Diphtheria')

# @title Status vs Life Expectancy

from matplotlib import pyplot as plt
df.plot(kind='scatter', x='Status', y='Life Expectancy', s=32, alpha=.8)
plt.gca().spines[['top', 'right',]].set_visible(False)

# @title Relationship between Infant and Under-Five Deaths

import matplotlib.pyplot as plt

plt.figure(figsize=(10, 6))
plt.scatter(df['infant deaths'], df['under-five deaths'])
plt.xlabel('Infant Deaths')
plt.ylabel('Under-Five Deaths')
_ = plt.title('Relationship between Infant and Under-Five Deaths')

# @title Relationship between Infant and Polio

import matplotlib.pyplot as plt

plt.figure(figsize=(10, 6))
plt.scatter(df['Polio'], df['infant deaths'])
plt.xlabel('Polio')
plt.ylabel('Infant Deaths')
_ = plt.title('Relationship between Infant Deaths and Polio')

# @title Adult Mortality vs infant deaths

from matplotlib import pyplot as plt
df.plot(kind='scatter', x='Adult Mortality', y='infant deaths', s=32, alpha=.8)
plt.gca().spines[['top', 'right',]].set_visible(False)

# @title Life Expectancy vs GDP

import matplotlib.pyplot as plt

plt.figure(figsize=(10, 6))
plt.scatter(df['GDP'], df['Life Expectancy'])
plt.xlabel('GDP')
plt.ylabel('Life Expectancy')
_ = plt.title('Life Expectancy vs GDP')

# @title infant deaths vs BMI

from matplotlib import pyplot as plt
df.plot(kind='scatter', x='infant deaths', y='BMI', s=32, alpha=.8)
plt.gca().spines[['top', 'right',]].set_visible(False)

# @title Polio vs Life Expectancy

from matplotlib import pyplot as plt
df.plot(kind='scatter', x='Polio', y='Life Expectancy', s=32, alpha=.8)
plt.gca().spines[['top', 'right',]].set_visible(False)

# @title Diptheria vs Life Expectancy

from matplotlib import pyplot as plt
df.plot(kind='scatter', x='Diphtheria', y='Life Expectancy', s=32, alpha=.8)
plt.gca().spines[['top', 'right',]].set_visible(False)

# @title HIV/AIDs vs Life Expectancy

from matplotlib import pyplot as plt
df.plot(kind='scatter', x='HIV/AIDS', y='Life Expectancy', s=32, alpha=.8)
plt.gca().spines[['top', 'right',]].set_visible

# @title Schooling vs Life Expectancy

from matplotlib import pyplot as plt
df.plot(kind='scatter', x='Schooling', y='Life Expectancy', s=32, alpha=.8)
plt.gca().spines[['top', 'right',]].set_visible

# @title Adult Mortality vs Polio

from matplotlib import pyplot as plt
df.plot(kind='scatter', x='Polio', y='Adult Mortality', s=32, alpha=.8)
plt.gca().spines[['top', 'right',]].set_visible

# @title Adult Mortality vs BMI

from matplotlib import pyplot as plt
df.plot(kind='scatter', x='BMI', y='Adult Mortality', s=32, alpha=.8)
plt.gca().spines[['top', 'right',]].set_visible

# @title Adult Mortality vs HIV/AIDS

from matplotlib import pyplot as plt
df.plot(kind='scatter', x='HIV/AIDS', y='Adult Mortality', s=32, alpha=.8)
plt.gca().spines[['top', 'right',]].set_visible

# @title Adult Mortality vs Thinness(1-19 years)

from matplotlib import pyplot as plt
df.plot(kind='scatter', x='Thinness(1-19 years)', y='Adult Mortality', s=32, alpha=.8)
plt.gca().spines[['top', 'right',]].set_visible

# @title Adult Mortality vs Thinness(5-9 years)

from matplotlib import pyplot as plt
df.plot(kind='scatter', x='Thinness(5-9 years)', y='Adult Mortality', s=32, alpha=.8)
plt.gca().spines[['top', 'right',]].set_visible

# @title Adult Mortality vs Income composition of resources

from matplotlib import pyplot as plt
df.plot(kind='scatter', x='Income composition of resources', y='Adult Mortality', s=32, alpha=.8)
plt.gca().spines[['top', 'right',]].set_visible

# @title Thinness(1-19 years)  vs Life Expectancy
from matplotlib import pyplot as plt
df.plot(kind='scatter', x='Thinness(1-19 years)', y='Life Expectancy', s=32, alpha=.8)
plt.gca().spines[['top', 'right',]].set_visible

# @title MULTIVARIATE ANALYSIS

# @title Life Expectancy vs HIV/AIDS with Status

import matplotlib.pyplot as plt

plt.figure(figsize=(10, 6))
plt.scatter(df['HIV/AIDS'], df['Life Expectancy'], c=df['Status'], cmap='viridis')
plt.xlabel('HIV/AIDS')
plt.ylabel('Life Expectancy')
plt.title('Life Expectancy vs HIV/AIDS')
_ = plt.colorbar(label='Status')

# @title Income Composition of Resources vs. Life Expectancy by Development Status

import matplotlib.pyplot as plt
plt.figure(figsize=(10, 6))
plt.scatter(df['Income composition of resources'], df['Life Expectancy'], c=df['Status'], cmap='viridis')
plt.xlabel('Income composition of resources')
plt.ylabel('Life Expectancy')
_ = plt.colorbar(label='Development Status')

# @title Schooling vs Life Expectancy with HIV/AIDS Impact

import matplotlib.pyplot as plt

plt.figure(figsize=(10, 6))
plt.scatter(df['Schooling'], df['Life Expectancy'], c=df['HIV/AIDS'], cmap='coolwarm')
plt.xlabel('Schooling')
plt.ylabel('Life Expectancy')
plt.title('Schooling vs Life Expectancy with HIV/AIDS Impact')
_ = plt.colorbar(label='HIV/AIDS Rate')

# @title Schooling vs Life Expectancy by Income Composition
plt.figure(figsize=(10, 6))
plt.scatter(df['Schooling'], df['Life Expectancy'], c=df['Income composition of resources'], cmap='coolwarm')
plt.xlabel('Schooling')
plt.ylabel('Life Expectancy')
plt.title('Schooling vs Life Expectancy by Income Composition')
_ = plt.colorbar(label='Income Composition of Resources')

# @title GDP vs Life Expectancy with Status of a Country

import matplotlib.pyplot as plt

plt.figure(figsize=(10, 6))
plt.scatter(df['GDP'], df['Life Expectancy'], c=df['Status'], cmap='viridis')
plt.xlabel('GDP')
plt.ylabel('Life Expectancy')
plt.title('GDP vs Life Expectancy with Status')
_ = plt.colorbar(label='Status (Developed or Developing)')

# @title Schooling vs Life Expectancy with Status of a Country

import matplotlib.pyplot as plt

plt.figure(figsize=(10, 6))
plt.scatter(df['Schooling'], df['Life Expectancy'], c=df['Status'], cmap='viridis')
plt.xlabel('Schooling')
plt.ylabel('Life Expectancy')
plt.title('Schooling vs Life Expectancy with Status')
_ = plt.colorbar(label='Status (Developed or Developing)')

# @title Life Expectancy vs Adult Mortality with Status of a Country

import matplotlib.pyplot as plt

plt.figure(figsize=(10, 6))
plt.scatter(df['Adult Mortality'], df['Life Expectancy'], c=df['Status'], cmap='viridis')
plt.xlabel('Adult Mortality')
plt.ylabel('Life Expectancy')
plt.title('Life Expectancy vs Adult Mortality with Status')
_ = plt.colorbar(label='Status (Developed or Developing)')

# @title Adult Mortality vs HIV/AIDS Rates with Status

import matplotlib.pyplot as plt

plt.figure(figsize=(10, 6))
plt.scatter(df['HIV/AIDS'], df['Adult Mortality'], c=df['Status'], cmap='viridis')
plt.xlabel('HIV/AIDS Rate')
plt.ylabel('Adult Mortality')
plt.title('Adult Mortality vs HIV/AIDS Rates')
_ = plt.colorbar(label='Status')

# @title Adult Mortality vs infant deaths Rates with Status

import matplotlib.pyplot as plt

plt.figure(figsize=(10, 6))
plt.scatter(df['infant deaths'], df['Adult Mortality'], c=df['Status'], cmap='viridis')
plt.xlabel('infant deaths')
plt.ylabel('Adult Mortality')
plt.title('Adult Mortality vs infant deaths Rates')
_ = plt.colorbar(label='Status')

# @title Adult Mortality vs under-five deaths Rates with Status

import matplotlib.pyplot as plt

plt.figure(figsize=(10, 6))
plt.scatter(df['under-five deaths'], df['Adult Mortality'], c=df['Status'], cmap='viridis')
plt.xlabel('under-five deaths')
plt.ylabel('Adult Mortality')
plt.title('Adult Mortality vs under-five deaths Rates')
_ = plt.colorbar(label='Status')

# @title Adult Mortality vs Schooling Rates with Status

import matplotlib.pyplot as plt

plt.figure(figsize=(10, 6))
plt.scatter(df['Schooling'], df['Adult Mortality'], c=df['Status'], cmap='viridis')
plt.xlabel('Schooling')
plt.ylabel('Adult Mortality')
plt.title('Adult Mortality vs Schooling Rates')
_ = plt.colorbar(label='Status')

# @title Adult Mortality vs Polio with Status

import matplotlib.pyplot as plt

plt.figure(figsize=(10, 6))
plt.scatter(df['Polio'], df['Adult Mortality'], c=df['Status'], cmap='viridis')
plt.xlabel('Polio')
plt.ylabel('Adult Mortality')
plt.title('Adult Mortality vs Polio Vaccination Rates')
_ = plt.colorbar(label='Status')

# @title Adult Mortality vs Diphtheria with Status

import matplotlib.pyplot as plt

plt.figure(figsize=(10, 6))
plt.scatter(df['Diphtheria'], df['Adult Mortality'], c=df['Status'], cmap='viridis')
plt.xlabel('Polio')
plt.ylabel('Adult Mortality')
plt.title('Adult Mortality vs Diphtheria Vaccination Rates')
_ = plt.colorbar(label='Status')

# @title life expectancy vs under-five deaths with status
plt.figure(figsize=(10, 6))
plt.scatter(df['under-five deaths'], df['Life Expectancy'], c=df['Status'], cmap='coolwarm')
plt.xlabel('under-five deaths')
plt.ylabel('Life Expectancy')
plt.title('Life Expectancy vs  under-five deaths')
_ = plt.colorbar(label='Status')

import seaborn as sns
import matplotlib.pyplot as plt
corrmat = df.corr(method = "spearman")
f, ax = plt.subplots(figsize=(12, 10))
sns.heatmap(corrmat, ax=ax, cmap = "coolwarm", linewidth = 0.1, annot = True)

